@using System.Globalization
@using System.Text.RegularExpressions
@model IEnumerable<TGNS.Portal.Models.BadgePlayerViewModel>

@{
    ViewBag.Title = "Badges";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 0;
}

@section HeadStyle
{
    div.col-md-4 {
        padding: 2px 0 2px 0;
    }
}

@section documentready
{
    notifySelector = 'button[name="save"]';
    $(notifySelector).on('click', function(){$(this).notify("Saving badge selection. Please wait.", {className: 'info', autoHide: false});setTimeout(function(){$(':input, :button').prop('disabled', true);},0)})
}

<h2>Badges</h2>

<p>Certain gameplay milestones earn you badges. You may choose any one badge to display on the in-game scoreboard<a target="_blank" href="https://www.youtube.com/v/nsdZKCh6RsU?start=11.4&end=17.2&version=3&autoplay=1" style="text-decoration: none; color: black;">.</a> Reconnecting to the game server causes your scoreboard to be updated with your new badge selection.</p>

@using (Html.BeginForm("Manage", "Badges", FormMethod.Post))
{
    <div class="container">
        <div class="row">
                @for (i = 0; i < Model.Count(); i++)
                {
var item = Model.ElementAt(i);
    <div class="col-md-4">
        <table style="width: auto; cursor: default;" onclick="$(this).find('input').prop('checked', true);">
            <tr>
                <td style="vertical-align: top; padding-right: 4px;">
                    @* http://stackoverflow.com/questions/13267619/razor-conditional-attribute-not-working *@
                    @if (item.ShowInGame)
                    {
                        <input type="radio" name="selectedBadgeInfo" checked value="@(item.ID)|@(item.DisplayName)" />
                    }
                    else
                    {
                        <input type="radio" name="selectedBadgeInfo" value="@(item.ID)|@(item.DisplayName)" />
                    }
                </td>
                <td style="background-color: black; padding: 5px;">
                    <img src="@(Url.Content("~/assets/img/badges/tgns" + item.ID + ".png"))" style="border: 0;" width="48" height="48" title="@(Html.Raw(item.Name)) (@(Html.Raw(item.LevelName)))" />
                </td>
                <td style="padding-left: 3px;">
                    <div style="font-size: large; margin-top: -6px;">
                        @Html.DisplayFor(modelItem => item.DisplayName)<br />
                    </div>
                    <div style="font-size: smaller; margin-top: -3px;">
                        @Html.Raw(Regex.Replace(Html.DisplayFor(modelItem => item.Description).ToHtmlString(), @"[\d,]+", m => string.Format("<strong>{0}</strong>", m.Value).ToString(CultureInfo.InvariantCulture)))
                        <br />
                        @Html.DisplayNameFor(model => model.Created): @Html.DisplayFor(modelItem => item.Created, "ShortDateTime")
                    </div>
                </td>
            </tr>

        </table>

    </div>
                    if ((i+1) % 3 == 0)
                    {
                        @Html.Raw(@"</div><div class=""row"">")
                    }
                }
        </div>
        <div class="row">
            <div class="col-md-4">
                <table style="width: auto;">
                    <tr>
                        <td style="vertical-align: top;">
                            @if (Model.Any(x => x.ShowInGame))
                            { <input type="radio" name="selectedBadgeInfo" value="0|Display No Badge" /> }
                            else
                            { <input type="radio" name="selectedBadgeInfo" checked value="0|Display No Badge" /> }
                            Display No Badge
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <button name="save" type="submit">Save</button>
}
